{"version":3,"sources":["components/sidebar.js","components/about-me.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","href","className","data-toggle","data-target","aria-expanded","aria-controls","id","style","backgroundImage","role","data-nav-section","src","width","height","alt","target","Component","About","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2OAEqBA,G,uLAEb,OACI,6BACI,6BACI,yBAAKC,KAAK,UAAUC,UAAU,6CAA6CC,cAAY,WAAWC,cAAY,UAAUC,gBAAc,QAAQC,gBAAc,UAAS,6BACrK,2BAAOC,GAAG,iBAAiBL,UAAU,wBACjC,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aAAaM,MAAO,CAAEC,gBAAiB,2BACtD,wBAAIF,GAAG,iBAAgB,uBAAGN,KAAK,cAAR,eACvB,0BAAMC,UAAU,SAAQ,uBAAGA,UAAU,cAArC,wBAEJ,yBAAKK,GAAG,qBAAqBG,KAAK,aAAaR,UAAU,UACrD,yBAAKK,GAAG,SAASL,UAAU,YACvB,4BACI,wBAAIA,UAAU,UAAS,uBAAGD,KAAK,QAAQU,mBAAiB,QAAjC,iBACvB,4BAAI,uBAAGV,KAAK,SAASU,mBAAiB,SAAlC,UAGJ,4BAAI,uBAAGV,KAAK,YAAYU,mBAAiB,YAArC,gBAIhB,yBAAKJ,GAAG,sBACJ,4BACI,4BAAI,uBAAGN,KAAK,+BAA8B,yBAAKC,UAAU,OAAOU,IAAI,+BAA+BC,MAAO,GAAIC,OAAQ,GAAIC,IAAI,iBAAiBC,OAAO,aACtJ,4BAAI,uBAAGf,KAAK,2CAA0C,yBAAKC,UAAU,OAAOU,IAAI,+BAA+BC,MAAO,GAAIC,OAAQ,GAAIC,IAAI,mBAAmBC,OAAO,aACpK,4BAAI,uBAAGf,KAAK,sCAAqC,yBAAKC,UAAU,OAAOU,IAAI,8BAA8BC,MAAO,GAAIC,OAAQ,GAAIC,IAAI,kBAAkBC,OAAO,aAC7J,4BAAI,uBAAGf,KAAK,sCAAqC,yBAAKC,UAAU,OAAOU,IAAI,8BAA8BC,MAAO,GAAIC,OAAQ,GAAIC,IAAI,kBAAkBC,OAAO,aAC7J,4BAAI,uBAAGf,KAAK,6CAA4C,yBAAKC,UAAU,OAAOU,IAAI,gCAAgCC,MAAO,GAAIC,OAAQ,GAAIC,IAAI,oBAAoBC,OAAO,sB,GA7BnKC,cCAhBC,E,iLAGjB,OACE,6BAEE,0BAAMhB,UAAU,sBACd,6BAASA,UAAU,OACjB,yBAAKA,UAAU,YACb,6BAASA,UAAU,YACjB,6BAEA,yBAAKU,IAAI,gCAAgCC,MAAO,IAAKC,OAAQ,IAAKC,IAAI,GAAGR,GAAG,gBAE5E,wBAAIL,UAAU,gBAAd,YACA,6BACA,6YAIN,8BAEF,4BAAQA,UAAU,UAChB,yBAAKA,UAAU,2BACf,uBAAGA,UAAU,4CAAb,mC,GAxByBe,aCwBpBE,E,iLAbP,OACI,yBAAKZ,GAAG,iBACJ,yBAAKA,GAAG,kBACJ,kBAAC,EAAD,MACA,yBAAKA,GAAG,iBACJ,kBAAC,EAAD,a,GAPNU,aCCEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.c1f3cff8.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Sidebar extends Component {\n    render() {\n        return (\n            <div>\n                <div>\n                    <nav href=\"#navbar\" className=\"js-colorlib-nav-toggle colorlib-nav-toggle\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\"><i /></nav>\n                    <aside id=\"colorlib-aside\" className=\"border js-fullheight\">\n                        <div className=\"text-center\">\n                            <div className=\"author-img\" style={{ backgroundImage: 'url(images/about.jpg)' }} />\n                            <h1 id=\"colorlib-logo\"><a href=\"index.html\">Sal Suriel</a></h1>\n                            <span className=\"email\"><i className=\"icon-mail\"></i> surielsa@gmail.com</span>\n                        </div>\n                        <nav id=\"colorlib-main-menu\" role=\"navigation\" className=\"navbar\">\n                            <div id=\"navbar\" className=\"collapse\">\n                                <ul>\n                                    <li className=\"active\"><a href=\"#home\" data-nav-section=\"home\">Introduction</a></li>\n                                    <li><a href=\"#about\" data-nav-section=\"about\">About</a></li>\n                                    {/*<li><a href=\"#\" data-nav-section=\"projects\">Projects</a></li>\n                  <li><a href=\"#\" data-nav-section=\"blog\">Blog</a></li>*/}\n                                    <li><a href=\"#timeline\" data-nav-section=\"timeline\">Timeline</a></li>\n                                </ul>\n                            </div>\n                        </nav>\n                        <nav id=\"colorlib-main-menu\">\n                            <ul>\n                                <li><a href=\"https://github.com/surielsa\"><img className=\"icon\" src=\"assets/images/github-128.png\" width={40} height={40} alt=\"GitHub Profile\" target=\"_blank\" /></a></li>\n                                <li><a href=\"https://www.linkedin.com/in/sal-suriel/\"><img className=\"icon\" src=\"assets/images/linkedinBW.png\" width={40} height={40} alt=\"LinkedIn Profile\" target=\"_blank\" /></a></li>\n                                <li><a href=\"https://rainbowcoder.blogspot.com/\"><img className=\"icon\" src=\"assets/images/bloggerBW.png\" width={40} height={40} alt=\"Blogger Profile\" target=\"_blank\" /></a></li>\n                                <li><a href=\"https://twitter.com/rainbow_coder3\"><img className=\"icon\" src=\"assets/images/twitterBW.png\" width={40} height={40} alt=\"Twitter Profile\" target=\"_blank\" /></a></li>\n                                <li><a href=\"https://www.instagram.com/rainbow_coder3/\"><img className=\"icon\" src=\"assets/images/instagramBW.png\" width={40} height={40} alt=\"Instagram Profile\" target=\"_blank\" /></a></li>\n\n                            </ul>\n                        </nav>\n                    </aside>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n  render() {\n\n    return (\n      <div>\n        {/* about_me */}\n        <main className=\"about-me-container\">\n          <section className=\"row\">\n            <div className=\"col-md-8\">\n              <article className=\"ab-block\">\n                <hr />\n                {/* edit image possibly change it to the SIDEBAR.js file */}\n                <img src=\"assets/images/Profile-Pic.jpg\" width={200} height={200} alt=\"\" id=\"about-image\" />\n\n                <h2 className=\"block-header\">About Me</h2>\n                <hr />\n                <p>I am an enthusiastic and energetic Full-Stack Web Developer with knowledge in JavaScript, Node, React, Express, MySQL, Sequelize, MongoDB, Mongoose, Bootstrap, HTML5, CSS3, JQuery, and various frameworks, libraries, and packages. I love debugging. I am currently learning Python and Angular.  I love to learn new things that help me become a more efficient coder.</p>\n              </article>\n            </div>\n          </section>\n          <hr />\n        </main>\n        <footer className=\"footer\">\n          <div className=\"two-toned-footer-color\" />\n          <p className=\"text-muted text-muted-footer text-center\">\n            Â© Copyright Sal Suriel\n        </p>\n        </footer>\n      </div>\n    );\n  }\n}","//TODO add the actual JSX file names that link to the JSX files in the components folder)\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport Sidebar from './components/sidebar';\nimport About from './components/about-me';\n\n\n\n\n//TODO This portion of the app needs to be updated to the files in the components folder. Also delete the things you do not need. Make code clean.\nclass App extends Component {\n    render() {\n        return (\n            <div id=\"colorlib-page\">\n                <div id=\"container-wrap\">\n                    <Sidebar></Sidebar>\n                    <div id=\"colorlib-main\">\n                        <About></About>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}